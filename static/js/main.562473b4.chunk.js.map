{"version":3,"sources":["components/shared/PaginationButtons/PaginationButtons.js","components/players/Card/Card.js","components/shared/SearchInput/SearchInput.js","components/shared/Loading/Loading.js","components/shared/Message/Message.js","pages/players/Home/HomeView.js","pages/players/Home/HomeContainer.js","App.js","index.js"],"names":["useStyles","makeStyles","paginationUL","display","PaginationButtons","handlePageChange","total","page","classes","Pagination","count","ul","color","size","Number","siblingCount","onChange","e","pageNumber","Card","player","className","src","avatar","alt","nickname","id","status","balance","SearchInput","setSearchPlayers","labelText","searchPlayers","TextField","value","label","type","variant","searchValue","target","test","InputProps","inputProps","endAdornment","InputAdornment","position","IconButton","Loading","message","CircularProgress","Message","HomeView","loading","totalPages","currentPage","players","showError","pagination","playersContainer","map","playersSection","length","HomeContainer","useState","setPlayers","setCurrentPage","setTotalPages","setLoading","setShowError","useEffect","searchString","trim","axios","get","process","then","response","calculateTotalPages","data","catch","fetchPlayersData","quantity","numberPages","Math","trunc","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAKMA,EAAYC,YAAW,CAC3BC,aAAc,CACZC,QAAS,iBAIAC,EAAoB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrDC,EAAUR,IAChB,OACE,cAACS,EAAA,EAAD,CACEC,MAAOJ,EACPE,QAAS,CAAEG,GAAIH,EAAQN,cACvBU,MAAM,UACNC,KAAK,QACLN,KAAMO,OAAOP,GACbQ,aAAc,EACdC,SAAU,SAACC,EAAGC,GAAJ,OAAmBb,EAAiBa,OCjBvCC,G,MAAO,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKC,IAAG,kBAAaF,EAAOG,QAAUC,IAAKJ,EAAOK,aAEpD,qBAAKJ,UAAU,iBAAf,SACE,0BAASA,UAAU,eAAnB,UACE,mBAAGA,UAAU,cAAb,SAA4BD,EAAOK,WACnC,mBAAGJ,UAAU,cAAb,SACE,8BACE,oCADF,IACcD,EAAOM,QAGvB,mBAAGL,UAAU,cAAb,SACE,8BACE,wCADF,IACkBD,EAAOO,YAG3B,mBAAGN,UAAU,cAAb,SACE,8BACE,yCADF,IACmBD,EAAOQ,uB,4CCnBzBC,EAAc,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cASzD,OACE,cAACC,EAAA,EAAD,CACEC,MAAOF,EACPG,MAAOJ,EACPK,KAAK,SACLC,QAAQ,WACRrB,SAAU,SAACC,GAAD,OAdOqB,EAcYrB,EAAEsB,OAAOL,YAbF,6BACQM,KAAKF,IACpB,KAAhBA,IACbR,EAAiBQ,IAJD,IAACA,GAejBG,WAAY,CACVC,WAAY,CACV,cAAe,UAEjBC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,Y,SCzBDC,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,qCACE,6BAAKA,IACL,cAACC,EAAA,EAAD,CAAkBrC,MAAM,UAAUC,KAAK,aCJhCqC,G,OAAU,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACxB,OACE,qBAAK3B,UAAU,SAAf,SACE,6BAAK2B,QCEEG,G,OAAW,SAAC,GASlB,IARLrB,EAQI,EARJA,iBACAsB,EAOI,EAPJA,QACA/C,EAMI,EANJA,iBACAgD,EAKI,EALJA,WACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,QACAvB,EAEI,EAFJA,cACAwB,EACI,EADJA,UAEMC,EACJ,qBAAKpC,UAAU,uBAAf,SACE,cAAC,EAAD,CACEhB,iBAAkBA,EAClBC,MAAO+C,EACP9C,KAAM+C,MAINI,EACJ,qBAAKrC,UAAU,mBAAf,SACGkC,EAAQI,KAAI,SAACvC,GAAD,OACX,cAAC,EAAD,CAAsBA,OAAQA,EAAQM,GAAIN,EAAOM,IAAtCN,EAAOM,SAIlBkC,EACJ,qBAAKvC,UAAU,SAAf,SACG+B,EACC,cAAC,EAAD,CAASJ,QAAQ,sBAEjB,qCACGS,EACAF,EAAQM,OAASH,EAAmB,cAAC,EAAD,CAASV,QAAQ,+BAK9D,OACE,qCACE,sBAAK3B,UAAU,SAAf,UACE,iDACA,cAAC,EAAD,CACES,iBAAkBA,EAClBC,UAAU,gBACVC,cAAeA,OAGlBwB,EAAY,cAAC,EAAD,CAASR,QAAQ,gCAAmCY,OCrD1DE,EAAgB,WAC3B,MAA8BC,mBAAS,IAAvC,mBAAOR,EAAP,KAAgBS,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOT,EAAP,KAAoBW,EAApB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOV,EAAP,KAAmBa,EAAnB,KACA,EAA0CH,mBAAS,IAAnD,mBAAO/B,EAAP,KAAsBF,EAAtB,KACA,EAA8BiC,oBAAS,GAAvC,mBAAOX,EAAP,KAAgBe,EAAhB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOP,EAAP,KAAkBY,EAAlB,KAEAC,qBAAU,YACiB,WAEvBF,GAAW,GACX,IAAIG,EAAetC,EACfA,EAAcuC,SAChBD,EAAY,kBAActC,IAE5BwC,IACGC,IADH,UAEOC,+CAFP,yBAEqDpB,EAFrD,kBANsB,IAMtB,OAE0FgB,IAEvFK,MAAK,SAACC,GACLV,EAAcW,EAAoBD,EAASE,KAAKxE,MAX9B,KAYlB0D,EAAWY,EAASE,KAAKA,MACzBX,GAAW,MAEZY,OAAM,WACLX,GAAa,GACbD,GAAW,MAGjBa,KACC,CAAC1B,EAAatB,IAEjB,IAAM6C,EAAsB,SAACvE,EAAO2E,GAClC,IAAIC,EAAcC,KAAKC,MAAM9E,EAAQ2E,GACrC,OAAOC,GAAe,EAAI,EAAIA,GAOhC,OACE,cAAC,EAAD,CACEpD,iBAAkBA,EAClBE,cAAeA,EACfoB,QAASA,EACT/C,iBATqB,SAACa,GACxB+C,EAAe/C,IASbmC,WAAYA,EACZC,YAAaA,EACbC,QAASA,EACTC,UAAWA,KC9CF6B,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.562473b4.chunk.js","sourcesContent":["import React from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  paginationUL: {\n    display: 'inline-flex'\n  }\n});\n\nexport const PaginationButtons = ({ handlePageChange, total, page }) => {\n  const classes = useStyles();\n  return (\n    <Pagination\n      count={total}\n      classes={{ ul: classes.paginationUL }}\n      color=\"primary\"\n      size=\"large\"\n      page={Number(page)}\n      siblingCount={0}\n      onChange={(e, pageNumber) => handlePageChange(pageNumber)}\n    />\n  );\n};\n\nPaginationButtons.propTypes = {\n  handlePageChange: PropTypes.func.isRequired,\n  total: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired\n};\n","import React from 'react';\nimport './Card.css';\nimport PropTypes from 'prop-types';\n\nexport const Card = ({ player }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"image-container\">\n        <img src={`https://${player.avatar}`} alt={player.nickname} />\n      </div>\n      <div className=\"info-container\">\n        <section className=\"name-tagline\">\n          <p className=\"player-name\">{player.nickname}</p>\n          <p className=\"player-info\">\n            <i>\n              <b>Id:</b> {player.id}\n            </i>\n          </p>\n          <p className=\"player-info\">\n            <i>\n              <b>Status:</b> {player.status}\n            </i>\n          </p>\n          <p className=\"player-info\">\n            <i>\n              <b>Balance:</b> {player.balance}\n            </i>\n          </p>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  player: PropTypes.shape({\n    id: PropTypes.number,\n    avatar: PropTypes.string,\n    nickname: PropTypes.string,\n    status: PropTypes.string,\n    balance: PropTypes.number\n  })\n};\n","import React from 'react';\nimport { IconButton, InputAdornment, TextField } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport '../../players/Card/Card.css';\nimport PropTypes from 'prop-types';\n\nexport const SearchInput = ({ setSearchPlayers, labelText, searchPlayers }) => {\n  const searchItems = (searchValue) => {\n    const regValidateOnlyLettersNumbers = /^[a-z0-9\\u00f1\\u00d1 _]+$/i;\n    const isValid = regValidateOnlyLettersNumbers.test(searchValue);\n    if (isValid || searchValue === '') {\n      setSearchPlayers(searchValue);\n    }\n  };\n\n  return (\n    <TextField\n      value={searchPlayers}\n      label={labelText}\n      type=\"search\"\n      variant=\"outlined\"\n      onChange={(e) => searchItems(e.target.value)}\n      InputProps={{\n        inputProps: {\n          'data-testid': 'search'\n        },\n        endAdornment: (\n          <InputAdornment position=\"start\">\n            <IconButton>\n              <SearchIcon />\n            </IconButton>\n          </InputAdornment>\n        )\n      }}\n    />\n  );\n};\n\nSearchInput.propTypes = {\n  setSearchPlayers: PropTypes.func.isRequired,\n  labelText: PropTypes.string.isRequired,\n  searchPlayers: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgress } from '@material-ui/core';\n\nexport const Loading = ({ message }) => {\n  return (\n    <>\n      <h2>{message}</h2>\n      <CircularProgress color=\"primary\" size=\"7rem\" />\n    </>\n  );\n};\n\nLoading.propTypes = {\n  message: PropTypes.string\n};\n","import React from 'react';\nimport './Message.css';\nimport PropTypes from 'prop-types';\n\nexport const Message = ({ message }) => {\n  return (\n    <div className=\"center\">\n      <h2>{message}</h2>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  message: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PaginationButtons } from '../../../components/shared/PaginationButtons/PaginationButtons';\nimport { Card } from '../../../components/players/Card/Card';\nimport { SearchInput } from '../../../components/shared/SearchInput/SearchInput';\nimport { Loading } from '../../../components/shared/Loading/Loading';\nimport { Message } from '../../../components/shared/Message/Message';\nimport './Home.css';\n\nexport const HomeView = ({\n  setSearchPlayers,\n  loading,\n  handlePageChange,\n  totalPages,\n  currentPage,\n  players,\n  searchPlayers,\n  showError\n}) => {\n  const pagination = (\n    <div className=\"pagination-container\">\n      <PaginationButtons\n        handlePageChange={handlePageChange}\n        total={totalPages}\n        page={currentPage}\n      />\n    </div>\n  );\n  const playersContainer = (\n    <div className=\"player-container\">\n      {players.map((player) => (\n        <Card key={player.id} player={player} id={player.id} />\n      ))}\n    </div>\n  );\n  const playersSection = (\n    <div className=\"center\">\n      {loading ? (\n        <Loading message=\"Searching Players\" />\n      ) : (\n        <>\n          {pagination}\n          {players.length ? playersContainer : <Message message=\"No players were found\" />}\n        </>\n      )}\n    </div>\n  );\n  return (\n    <>\n      <div className=\"center\">\n        <h1>List of Players</h1>\n        <SearchInput\n          setSearchPlayers={setSearchPlayers}\n          labelText=\"Search player\"\n          searchPlayers={searchPlayers}\n        />\n      </div>\n      {showError ? <Message message=\"A system error has occurred\" /> : playersSection}\n    </>\n  );\n};\n\nHomeView.propTypes = {\n  setSearchPlayers: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  players: PropTypes.array.isRequired,\n  searchPlayers: PropTypes.string.isRequired,\n  showError: PropTypes.bool.isRequired\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { HomeView } from './HomeView';\n\nexport const HomeContainer = () => {\n  const [players, setPlayers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchPlayers, setSearchPlayers] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    const fetchPlayersData = () => {\n      const quantityPages = 20;\n      setLoading(true);\n      let searchString = searchPlayers;\n      if (searchPlayers.trim()) {\n        searchString = `&search=${searchPlayers}`;\n      }\n      axios\n        .get(\n          `${process.env.REACT_APP_API_URL}players/?page=${currentPage}&limit=${quantityPages}${searchString}`\n        )\n        .then((response) => {\n          setTotalPages(calculateTotalPages(response.data.total, quantityPages));\n          setPlayers(response.data.data);\n          setLoading(false);\n        })\n        .catch(() => {\n          setShowError(true);\n          setLoading(false);\n        });\n    };\n    fetchPlayersData();\n  }, [currentPage, searchPlayers]);\n\n  const calculateTotalPages = (total, quantity) => {\n    let numberPages = Math.trunc(total / quantity);\n    return numberPages <= 0 ? 1 : numberPages;\n  };\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <HomeView\n      setSearchPlayers={setSearchPlayers}\n      searchPlayers={searchPlayers}\n      loading={loading}\n      handlePageChange={handlePageChange}\n      totalPages={totalPages}\n      currentPage={currentPage}\n      players={players}\n      showError={showError}\n    />\n  );\n};\n","import { HomeContainer } from './pages/players/Home/HomeContainer';\nfunction App() {\n  return (\n    <>\n      <HomeContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}